{"version":3,"sources":["store/actions.ts","store/index.ts","closest-oom.ts","components/AppInputs.tsx","components/AppOutputs.tsx","components/App.tsx","index.tsx"],"names":["isActionSetCurrentTime","action","type","isActionSetInputValue","DEFAULT_STATE","currentTime","inputValue","inputNumber","outputNumber","isValid","oom","isInputValueValid","isInputNumberValid","Number","isNaN","isOutputNumberValid","reducer","left","right","state","arguments","length","undefined","data","String","Object","objectSpread","Math","round","log","LN10","Infinity","pow","isActionSetOrderOfMagnitude","getInputValue","getOutputTime","Date","isInputValid","getOrderOfMagnitude","AppInputs","useSelector","dispatch","useDispatch","react","className","htmlFor","id","autoFocus","autoComplete","value","onChange","e","currentTarget","valueAsNumber","AppOutputs","outputTime","readOnly","getTime","toISOString","toLocaleString","App","components_AppInputs","components_AppOutputs","store","createStore","rootReducer","composeWithDevTools","now","render","es","components_App","document","getElementById"],"mappings":"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","file":"static/js/main.47cf02c3.chunk.js","sourcesContent":["import { Action } from 'redux';\r\n\r\n/* Set current time */\r\n\r\nexport const ACTION_SET_CURRENT_TIME = 'SET_CURRENT_TIME';\r\n\r\nexport interface ActionSetCurrentTime extends Action<typeof ACTION_SET_CURRENT_TIME> {\r\n  data: {\r\n    currentTime: number;\r\n  };\r\n}\r\n\r\nexport const isActionSetCurrentTime = (action: Action): action is ActionSetCurrentTime => (\r\n  action.type === ACTION_SET_CURRENT_TIME\r\n);\r\n\r\nexport const setCurrentTime = (currentTime: number): ActionSetCurrentTime => ({\r\n  type: ACTION_SET_CURRENT_TIME,\r\n  data: {\r\n    currentTime,\r\n  },\r\n});\r\n\r\n/* Set input value */\r\n\r\nexport const ACTION_SET_INPUT_VALUE = 'SET_INPUT_VALUE';\r\n\r\nexport interface ActionSetInputValue extends Action<typeof ACTION_SET_INPUT_VALUE> {\r\n  data: {\r\n    inputValue: string;\r\n  };\r\n}\r\n\r\nexport const isActionSetInputValue = (action: Action): action is ActionSetInputValue => (\r\n  action.type === ACTION_SET_INPUT_VALUE\r\n);\r\n\r\nexport const setInputValue = (inputValue: string): ActionSetInputValue => ({\r\n  type: ACTION_SET_INPUT_VALUE,\r\n  data: {\r\n    inputValue,\r\n  },\r\n});\r\n\r\n/* Set order of magnitude */\r\n\r\nexport const ACTION_SET_ORDER_OF_MAGNITUDE = 'SET_ORDER_OF_MAGNITUDE';\r\n\r\nexport interface ActionSetOrderOfMagnitude extends Action<typeof ACTION_SET_ORDER_OF_MAGNITUDE> {\r\n  data: {\r\n    oom: number;\r\n  };\r\n}\r\n\r\nexport const isActionSetOrderOfMagnitude = (action: Action): action is ActionSetOrderOfMagnitude => (\r\n  action.type === ACTION_SET_ORDER_OF_MAGNITUDE\r\n);\r\n\r\nexport const setOrderOfMagnitude = (oom: number): ActionSetOrderOfMagnitude => ({\r\n  type: ACTION_SET_ORDER_OF_MAGNITUDE,\r\n  data: {\r\n    oom,\r\n  },\r\n});\r\n","import { Reducer } from 'redux';\r\nimport { getClosestOOM } from '../closest-oom';\r\nimport { isActionSetCurrentTime, isActionSetInputValue, isActionSetOrderOfMagnitude } from './actions';\r\n\r\nexport interface RootReducerState {\r\n  currentTime: number;\r\n  inputValue: string;\r\n  inputNumber: number;\r\n  outputNumber: number;\r\n  isValid: boolean;\r\n  oom: number;\r\n}\r\n\r\nexport const DEFAULT_STATE: RootReducerState = {\r\n  currentTime: 0,\r\n  inputValue: '',\r\n  inputNumber: 0,\r\n  outputNumber: 0,\r\n  isValid: false,\r\n  oom: 0,\r\n};\r\n\r\nconst MAX_DATE_TIME = 8640000000000000;\r\nconst MIN_DATE_TIME = -8640000000000000;\r\n\r\nconst isInputValueValid = (inputValue: string) => (\r\n  inputValue !== '' && isInputNumberValid(Number(inputValue))\r\n);\r\n\r\nconst isInputNumberValid = (inputNumber: number) => (\r\n  !isNaN(inputNumber)\r\n);\r\n\r\nconst isOutputNumberValid = (outputNumber: number) => (\r\n  outputNumber >= MIN_DATE_TIME && outputNumber <= MAX_DATE_TIME\r\n);\r\n\r\nconst reducer: Reducer<RootReducerState> = (state = DEFAULT_STATE, action) => {\r\n  if (isActionSetCurrentTime(action) || isActionSetInputValue(action)) {\r\n    let { currentTime, inputValue } = state;\r\n    \r\n    if (isActionSetCurrentTime(action)) {\r\n      currentTime = action.data.currentTime;\r\n      inputValue = String(currentTime);\r\n    } else if (isActionSetInputValue(action)) {\r\n      inputValue = action.data.inputValue;\r\n    }\r\n\r\n    if (!isInputValueValid(inputValue)) {\r\n      return {\r\n        ...state,\r\n        currentTime,\r\n        inputValue,\r\n        isValid: false,\r\n      };\r\n    };\r\n\r\n    const inputNumber = Number(inputValue);\r\n\r\n    if (inputNumber === 0) {\r\n      return {\r\n        ...state,\r\n        currentTime,\r\n        inputValue,\r\n        inputNumber,\r\n        isValid: true,\r\n        outputNumber: 0,\r\n        oom: 0,\r\n      };\r\n    }\r\n\r\n    let oom = getClosestOOM(inputNumber, currentTime);\r\n    if (oom === Infinity || oom === -Infinity) {\r\n      oom = 0;\r\n    }\r\n    \r\n    const outputNumber = inputNumber * Math.pow(10, oom);\r\n\r\n    if (!isOutputNumberValid(outputNumber)) {\r\n      return {\r\n        ...state,\r\n        currentTime,\r\n        inputValue,\r\n        isValid: false,\r\n      };\r\n    }\r\n\r\n    return {\r\n      ...state,\r\n      currentTime,\r\n      inputValue,\r\n      inputNumber,\r\n      isValid: true,\r\n      outputNumber,\r\n      oom,\r\n    };\r\n  }\r\n\r\n  if (isActionSetOrderOfMagnitude(action)) {\r\n    const { oom } = action.data;\r\n    const outputNumber = state.inputNumber * Math.pow(10, action.data.oom);\r\n    \r\n    if (!isOutputNumberValid(outputNumber)) {\r\n      return {\r\n        ...state,\r\n        oom,\r\n        isValid: false,\r\n      };\r\n    }\r\n\r\n    return {\r\n      ...state,\r\n      outputNumber,\r\n      oom,\r\n      isValid: isInputValueValid(state.inputValue)\r\n    };\r\n  }\r\n  \r\n  return state;\r\n};\r\n\r\nexport default reducer;\r\n\r\nexport const getCurrentTime = (state: RootReducerState) => state.currentTime;\r\nexport const getInputValue = (state: RootReducerState) => state.inputValue;\r\nexport const getOutputTime = (state: RootReducerState) => new Date(state.outputNumber);\r\nexport const isInputValid = (state: RootReducerState) => state.isValid;\r\nexport const getOrderOfMagnitude = (state: RootReducerState) => state.oom;\r\n","export const getClosestOOM = (left: number, right: number) => (\n  Math.round(\n    (Math.log(right) / Math.LN10) -\n    (Math.log(left) / Math.LN10)\n  )\n);\n","import * as React from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { getInputValue, getOrderOfMagnitude } from '../store';\r\nimport { setInputValue, setOrderOfMagnitude } from '../store/actions';\r\n\r\nconst AppInputs: React.FC = () => {\r\n  const inputValue = useSelector(getInputValue);\r\n  const oom = useSelector(getOrderOfMagnitude);\r\n  const dispatch = useDispatch();\r\n  const handleChangeInput: React.ChangeEventHandler<HTMLInputElement> = (e) => {\r\n    dispatch(setInputValue(e.currentTarget.value));\r\n  };\r\n  const handleChangeOOM: React.ChangeEventHandler<HTMLInputElement> = (e) => {\r\n    dispatch(setOrderOfMagnitude(e.currentTarget.valueAsNumber));\r\n  };\r\n  return (\r\n    <div className=\"AppInputs-inputs\">\r\n      <div className=\"row\">\r\n        <div className=\"col-md-9\">\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"AppInputs-input\">Unix timestamp</label><br />\r\n            <input\r\n              id=\"AppInputs-input\"\r\n              className=\"form-control form-control-lg\"\r\n              type=\"text\"\r\n              autoFocus={true}\r\n              autoComplete=\"off\"\r\n              value={inputValue}\r\n              onChange={handleChangeInput}\r\n            />\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"col-md-3\">\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"AppInputs-oom\">Order of magnitude</label><br />\r\n            <input\r\n              id=\"AppInputs-oom\"\r\n              className=\"form-control form-control-lg\"\r\n              type=\"number\"\r\n              value={oom}\r\n              onChange={handleChangeOOM}\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AppInputs;\r\n","import * as React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { getOutputTime, isInputValid } from '../store';\r\n\r\nconst AppOutputs: React.FC = () => {\r\n  const outputTime = useSelector(getOutputTime);\r\n  const isValid = useSelector(isInputValid);\r\n  \r\n  if (!isValid) return null;\r\n\r\n  return (\r\n    <div className=\"AppOutputs\">\r\n      <div className=\"row\">\r\n        <div className=\"col-sm\">\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"AppOutputs-milliseconds\"><strong>Unix timestamp (milliseconds)</strong></label>\r\n            <input\r\n              id=\"AppOutputs-milliseconds\"\r\n              type=\"text\"\r\n              readOnly={true}\r\n              className=\"form-control-plaintext\"\r\n              value={outputTime.getTime()}\r\n            />\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"col-sm\">\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"AppOutputs-seconds\"><strong>Unix timestamp (seconds)</strong></label>\r\n            <input\r\n              id=\"AppOutputs-seconds\"\r\n              type=\"text\"\r\n              readOnly={true}\r\n              className=\"form-control-plaintext\"\r\n              value={outputTime.getTime() / 1000}\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"row\">\r\n        <div className=\"col-sm\">\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"AppOutputs-iso\"><strong>ISO string</strong></label>\r\n            <input\r\n              id=\"AppOutputs-iso\"\r\n              type=\"text\"\r\n              readOnly={true}\r\n              className=\"form-control-plaintext\"\r\n              value={outputTime.toISOString()}\r\n            />\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"col-sm\">\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"AppOutputs-locale\"><strong>Locale date/time</strong></label>\r\n            <input\r\n              id=\"AppOutputs-locale\"\r\n              type=\"text\"\r\n              readOnly={true}\r\n              className=\"form-control-plaintext\"\r\n              value={outputTime.toLocaleString()}\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AppOutputs;\r\n","import * as React from 'react';\nimport AppInputs from './AppInputs';\nimport AppOutputs from './AppOutputs';\n\nconst App: React.FC = () => (\n  <div className=\"App\">\n    <AppInputs />\n    \n    <br />\n    <hr />\n    <br />\n    \n    <AppOutputs />\n  </div>\n);\n\nexport default App;\n","import * as React from 'react';\nimport { render } from 'react-dom';\nimport { createStore } from 'redux';\nimport rootReducer from './store';\nimport { setCurrentTime } from './store/actions';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport { Provider as StoreProvider } from 'react-redux';\nimport App from './components/App';\nimport 'bootstrap/dist/css/bootstrap.css';\n\nconst store = createStore(rootReducer, composeWithDevTools());\n\nstore.dispatch(\n  setCurrentTime(Date.now())\n);\n\nrender(\n  <StoreProvider store={store}>\n    <App />\n  </StoreProvider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}